{"version":3,"file":"jsURL.js","names":["regexs","url","RegExp","URL","base","resolve","matches","exec","Error","href","protocol","username","password","hostname","port","host","origin","pathname","search","hash","searchParams","URLSearchParams","toString","baseURL","e","substring","replace","map","pairs","split","forEach","pair","index","indexOf","key","val","length","push","splice","Object","keys","exclude_question_mark","vals","prefix","module","exports","window","jsURL"],"sources":["../es6-node/jsURL.js"],"sourcesContent":["const regexs = {\n  url: new RegExp('^([^/:]+:)//(?:([^/:@]+):?([^/:@]+)?@)?([^/:]+)(?::(\\\\d+))?(/[^\\\\?#]*)(\\\\?[^#]*)?(#[.]*)?$')\n}\n\nclass URL {\n  constructor(url, base) {\n    if (base)\n      url = URL.resolve(url, base) || ''\n\n    const matches = regexs.url.exec(url)\n    if (!matches) throw new Error(\"Failed to construct 'URL': Invalid URL\")\n\n    this.href         = matches[0] || ''\n    this.protocol     = matches[1] || ''\n    this.username     = matches[2] || ''\n    this.password     = matches[3] || ''\n    this.hostname     = matches[4] || ''\n    this.port         = matches[5] || ''\n    this.host         = this.port ? `${this.hostname}:${this.port}` : this.hostname\n    this.origin       = `${this.protocol}//${this.host}`\n    this.pathname     = matches[6] || ''\n    this.search       = matches[7] || ''\n    this.hash         = matches[8] || ''\n    this.searchParams = new URLSearchParams(this.search)\n  }\n\n  static resolve(url, base) {\n    let baseURL\n\n    try {\n      new URL(url)\n      // url is valid\n      return url\n    }\n    catch(e) {}\n\n    try {\n      baseURL = new URL(base)\n    }\n    catch(e) {\n      // base is not valid\n      return null\n    }\n\n    // url is not absolute, base is valid:\n    // resolve url relative to base\n\n    if (!url)\n      return base\n\n    else if (url.substring(0, 2) === '//')\n      return `${baseURL.protocol}${url}`\n\n    else if (url.substring(0, 1) === '/')\n      return `${baseURL.protocol}//${baseURL.username ? (baseURL.password ? `${baseURL.username}:${baseURL.password}@` : `${baseURL.username}@`) : ''}${baseURL.host}${url}`\n\n    else\n      return `${baseURL.protocol}//${baseURL.username ? (baseURL.password ? `${baseURL.username}:${baseURL.password}@` : `${baseURL.username}@`) : ''}${baseURL.host}${baseURL.pathname.replace(/[^\\/]+$/, '')}${url}`\n  }\n\n  toString() {\n    return `${this.protocol}//${this.username ? (this.password ? `${this.username}:${this.password}@` : `${this.username}@`) : ''}${this.host}${this.pathname}${this.searchParams.toString()}${this.hash}`\n  }\n\n  toJSON() {\n    return this.toString()\n  }\n}\n\nclass URLSearchParams {\n  constructor(search) {\n    this.map = {}\n\n    if (search && (search[0] === '?'))\n      search = search.substring(1)\n\n    if (search) {\n      const pairs = search.split('&')\n      pairs.forEach(pair => {\n        const index = pair.indexOf('=')\n\n        if (index > 0) {\n          const key = pair.substring(0, index)\n          const val = (index + 1 < pair.length) ? pair.substring(index + 1) : ''\n\n          if (!this.map[key])\n            this.map[key] = []\n\n          this.map[key].push(val)\n        }\n      })\n    }\n  }\n\n  has(key) {\n    return !!this.map[key]\n  }\n\n  get(key) {\n    return this.map[key] ? this.map[key][0] : null\n  }\n\n  getAll(key) {\n    return this.map[key] ? [...this.map[key]] : []\n  }\n\n  set(key, val) {\n    this.map[key] = [val]\n  }\n\n  append(key, val) {\n    if (!this.map[key])\n      this.map[key] = []\n\n    this.map[key].push(val)\n  }\n\n  delete(key, val) {\n    if (!this.map[key]) return\n\n    if (val) {\n      const index = this.map[key].indexOf(val)\n      if (index >= 0) {\n        this.map[key].splice(index, 1)\n\n        if (!this.map[key].length)\n          delete this.map[key]\n      }\n    }\n    else {\n      delete this.map[key]\n    }\n  }\n\n  keys() {\n    return Object.keys(this.map)\n  }\n\n  toString(exclude_question_mark) {\n    let search = ''\n    const keys = this.keys()\n    keys.forEach(key => {\n      const vals = this.map[key]\n      vals.forEach(val => {\n        let prefix = search ? '&' : exclude_question_mark ? '' : '?'\n        search += `${prefix}${key}=${val}`\n      })\n    })\n    return search\n  }\n}\n\ntry {\n  if (module instanceof Object)\n    module.exports = {URL, URLSearchParams}\n}\ncatch(e) {}\n\ntry {\n  if (window instanceof Object)\n    window.jsURL = URL\n}\ncatch(e) {}\n"],"mappings":"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"}